name: "Android : Build & Upload to Firebase App Distribution ü§ñ"

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

on: [push]

defaults:
  run:
    shell: bash

env:
  NODE_VERSION: '16'
  JAVA_VERSION: '17'
  WORKING_DIRECTORY: examples/react-native-example

jobs:
  build:
    timeout-minutes: 60
    defaults:
        run:
          working-directory: ${{ env.WORKING_DIRECTORY }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Print working directory üñ®Ô∏è
        run: |
          ls -la ${{github.workspace}}
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Set image version üîÇ
        run: echo "ImageVersion=$ImageVersion" >> $GITHUB_ENV
      - name: Node cache ‚òä
        uses: actions/cache@v2.1.6
        with:
          path: ~/.yarn
          key: ${{ runner.os }}-${{ env.ImageVersion }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.ImageVersion }}-node-
      - name: Install node modules üì¶
        run: yarn install --frozen-lockfile
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v2
        with:
           distribution: 'temurin'
           java-version: ${{ env.JAVA_VERSION }}
      - name: Update Gradle lock üîè
        if: github.event_name == 'pull_request'
        working-directory: ${{ env.WORKING_DIRECTORY }}/android
        run: ./gradlew app:dependencies --write-locks
      - name: build release üèóÔ∏è
        working-directory: ${{ env.WORKING_DIRECTORY }}/android
        run: ./gradlew assembleRelease
      - name: Upload artifact to Firebase App Distribution üî•
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
          serviceCredentialsContent: ${{ secrets.FIREBASE_SERVICE_CREDENTIALS_PRO }}
          groups: testers
          # add commit message as release notes
          releaseNotes: ${{ github.event.head_commit.message || github.event.commits[0].message || github.event.pull_request.title || github.event.pull_request.head.ref }}
          file: ${{ env.WORKING_DIRECTORY }}/android/app/build/outputs/apk/release/app-release.apk
      - name: Upload e2e APK üöÄ
        uses: actions/upload-artifact@v2
        with:
          name: android-e2e
          path: ${{ env.WORKING_DIRECTORY }}/android/app/build/outputs/apk/

  e2e:
    needs: build
    # only macos supports hw virtualization
    # https://github.com/actions/virtual-environments/issues/183
    runs-on: macos-latest
    timeout-minutes: 60
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    env:
      api-level: 29
      target: google_apis
      avd-name: Pixel_2_API_29
      arch: arm64
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install node modules üì¶
        run: yarn install --frozen-lockfile
      - name: Download APK ‚è¨
        uses: actions/download-artifact@v2
        with:
          name: android-e2e
          path: ${{ env.WORKING_DIRECTORY }}/android/app/build/outputs/apk/
      - name: Install detox ‚è≥
        run: npm install -g detox-cli
      - name: Refresh detox ‚ôªÔ∏è
        run: |
          npx detox clean-framework-cache
          npx detox build-framework-cache
      - name: Run e2e tests üß™
        uses: reactivecircus/android-emulator-runner@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
          api-level: ${{ env.api-level }}
          target: ${{ env.target }}
          avd-name: ${{ env.avd-name }}
          force-avd-creation: true
          arch: ${{ env.arch }}
          script: |
            sdkmanager --list
            ls -la android/app/build/outputs/apk/release
            adb -e install -r android/app/build/outputs/apk/release/app-release.apk
            npx detox test e2e -c android.emu.release --reuse --headless --gpu swiftshader_indirect --debug-synchronization 5000 --take-screenshots failing --record-logs failing
      - name: Upload e2e logs ü™µ
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: logs-e2e-android
          path: artifacts
